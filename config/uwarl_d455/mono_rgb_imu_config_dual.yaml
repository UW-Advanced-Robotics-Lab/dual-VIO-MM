%YAML 1.0
---
# [Configuration Options]
# [ORIGINAL] only 1 device support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
# [NEW] custom support: 2 devices
num_of_devices: 2
d0_imu: 1
d1_imu: 1
d0_num_of_cam: 1
d1_num_of_cam: 1

# [TODO] add support for [standalone, dual mode]
operating_mode: "standalone"

# [ROS Topic Assignments]
# - [cam0]
d0_imu_topic: "/cam_base/imu"
d0_image0_topic: "/cam_base/color/image_raw"
# - [cam1]
d1_imu_topic: "/cam_EE/imu"
d1_image0_topic: "/cam_EE/color/image_raw"

# [Output Path]
output_path: "~/output"

# [Calib. File Dependencies]
d0_cam0_calib: "color_base_mei.yaml"
d1_cam0_calib: "color_EE_mei.yaml"

image_width: 1280
image_height: 720

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2: unknown, auto-calib on-fly

# [TODO: correction needed for calibration]
d0_body_T_cam0: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [  ### 0511:
             0.9998882, -0.00193321, 0.01482754, 0.02478332,
             0.00201731, 0.99998196, -0.00565838, -0.01078818,
            -0.01481633, 0.00568766, 0.99987406, 0.0356058,
             0., 0., 0., 1. ]
d1_body_T_cam0: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [  #### based on [2023-05-11-15-43-1_EE_rgb_mei-results-imucam]
             0.99999713,  0.00184888, -0.00152691,  0.03679528,
            -0.00184825,  0.99999821,  0.00041351,  0.0029463 ,
             0.00152767, -0.00041069,  0.99999875,  0.03515003,
             0.        ,  0.        ,  0.        ,  1.         ]

#Multiple thread support
multiple_thread: 1

# [Front-end Configuration] TODO: should we separate settings independently?
# feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                 # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

# optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

# [IMU Configuration]
#imu parameters       The more accurate parameters you provide, the better performance
# - [cam0]
d0_acc_n: 0.0558          # accelerometer measurement noise standard deviation. #0.2   0.04
d0_acc_w: 0.0000525       # accelerometer bias random work noise standard deviation.  #0.002
d0_gyr_n: 0.00229         # gyroscope measurement noise standard deviation.     #0.05  0.004
d0_gyr_w: 0.00000196      # gyroscope bias random work noise standard deviation.     #4.0e-5
d0_g_norm: 9.8         # gravity magnitude
# - [cam1]
d1_acc_n: 0.283          # accelerometer measurement noise standard deviation. #0.2   0.04
d1_acc_w: 0.00212        # accelerometer bias random work noise standard deviation.  #0.002
d1_gyr_n: 0.006463      # gyroscope measurement noise standard deviation.     #0.05  0.004
d1_gyr_w: 0.0000267      # gyroscope bias random work noise standard deviation.     #4.0e-5
d1_g_norm: 9.8         # gravity magnitude #TODO: unified gravity magnitude??

# NOTE: fine tuned on May 9 , 11 pm
#unsynchronization parameters
# - [cam0]
d0_estimate_td: 0         # online estimate time offset between camera and imu
d0_td: 0.00022326806147822398 # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
# - [cam1]
d1_estimate_td: 0         # online estimate time offset between camera and imu
d1_td: 0.0003475970005734179 # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
# - [cam0]
d0_load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
d0_pose_graph_save_path: "~/output/pose_graph_c0/" # save and load path
d0_save_image: 1                      # save image in pose graph for visualization prupose; you can close this function by setting 0 
# - [cam1]
d1_load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
d1_pose_graph_save_path: "~/output/pose_graph_c1/" # save and load path
d1_save_image: 1                      # save image in pose graph for visualization prupose; you can close this function by setting 0 
