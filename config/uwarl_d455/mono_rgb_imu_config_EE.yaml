%YAML 1.0
---
#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1

imu_topic: "/cam_EE/imu"
image0_topic: "/cam_EE/color/image_raw"
output_path: "output/"

cam0_calib: "color_EE_mei.yaml"
image_width: 1280
image_height: 720

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2: unknown, auto-calib on-fly

body_T_cam0: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [ 
        # T_ic [kalibr 100Hz, 200Hz on 200Hz calibration data]:
            #  0.99985705,  0.00078789, 0.01688968, 0.04100968,
            # -0.00084251,  0.99999444, 0.0032268 , 0.00218682,
            # -0.01688704, -0.00324057, 0.99985215, 0.03792703,
            #  0., 0., 0., 1.]
        # T_ic [kalibr 200Hz sampling on 200Hz calibration data]:
            #  0.99991385, 0.00086815, 0.01309728, 0.03721934,
            # -0.00089894, 0.99999685, 0.00234506, 0.00264814,
            # -0.01309521, -0.00235664, 0.99991148, 0.03293071,
            #  0., 0., 0., 1.]
        #### based on [2023-05-11-15-42-14_EE_rgb_mei-results-imucam]
            #     0.99998975,  0.00059731,  0.0044877 ,  0.03276503,
            #    -0.00059713,  0.99999982, -0.00004132, -0.00029959,
            #    -0.00448772,  0.00003864,  0.99998993,  0.04621308,
            #     0.,          0.,          0.,          1.        ]
        # #### based on [2023-05-11-15-43-1_EE_rgb_mei-results-imucam]
             0.99999713,  0.00184888, -0.00152691,  0.03679528,
            -0.00184825,  0.99999821,  0.00041351,  0.0029463 ,
             0.00152767, -0.00041069,  0.99999875,  0.03515003,
             0.        ,  0.        ,  0.        ,  1.         ]
        # T_ic: Extrinsic from "Color" To "Gyro" [Manufacture]
            #    0.999996    ,     0.00212487   ,   -0.00160311    , 0.0289688687771559 ,
            #   -0.00212717  ,     0.999997     ,   -0.00143346    , 0.00740136113017797 ,
            #    0.00160005  ,     0.00143687   ,    0.999998      , 0.0156113049015403 , 
            #    0, 0, 0, 1]
        # T_ci_rot:
            # 1.68896757e-02,  3.22680257e-03,  9.99852152e-01, -3.86211158e-02,
            # -9.99857049e-01,  8.42508814e-04,  1.68870394e-02,  4.03615024e-02,
            # -7.87893109e-04, -9.99994439e-01,  3.24057100e-03,  2.09621806e-03,
            # 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  1.00000000e+00 ]
        # T_ci
            # 0.9998570488224622, -0.0008425088140642216, -0.016887039377431388, -0.04036150235533812,
            # 0.0007878931090668004, 0.9999944389465729, -0.003240570995632523, -0.00209621806005239,
            # 0.016889675677329605, 0.0032268025702347843, 0.9998521523708831, -0.03862111584785017,
            # 0.0, 0.0, 0.0, 1.0 ]
        # T_ic:
        #      0.99985705, 0.00078789, 0.01688968, 0.04100968,
        #     -0.00084251, 0.99999444, 0.0032268, 0.00218682,
        #     -0.01688704, -0.00324057, 0.99985215, 0.03792703,
        #      0., 0., 0., 1.]
        # NOTE: it is verified that the parameters are T_ic, not T_ci from the kalibr defaults, as shown below:
            # 0.9998570488224622, -0.0008425088140642216, -0.016887039377431388, -0.04036150235533812,
            # 0.0007878931090668004, 0.9999944389465729, -0.003240570995632523, -0.00209621806005239,
            # 0.016889675677329605, 0.0032268025702347843, 0.9998521523708831, -0.03862111584785017,
            # 0.0, 0.0, 0.0, 1.0 ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.283          # accelerometer measurement noise standard deviation. #0.2   0.04
acc_w: 0.00212        # accelerometer bias random work noise standard deviation.  #0.002
gyr_n: 0.006463      # gyroscope measurement noise standard deviation.     #0.05  0.004
gyr_w: 0.0000267      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8         # gravity magnitude

#### based on [2023-05-11-15-43-17_EE_rgb_mei-results-imucam]
#   Model: calibrated
#   Update rate: 200.0
#   Accelerometer:
#     Noise density: 0.009998222535561607 
#     Noise density (discrete): 0.1413962190941554 
#     Random walk: 0.0010572240682889056
#   Gyroscope:
#     Noise density: 0.00045700146412701916
#     Noise density (discrete): 0.00646297668592792 
#     Random walk: 2.672307981517485e-06
#   T_ib (imu0 to imu0)

#unsynchronization parameters
estimate_td: 0         # online estimate time offset between camera and imu
td: 0.0003475970005734179 # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 0                      # save image in pose graph for visualization prupose; you can close this function by setting 0 
