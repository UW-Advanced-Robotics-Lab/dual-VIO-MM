%YAML 1.0
---
#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1

imu_topic: "/cam_base/imu"
image0_topic: "/cam_base/color/image_raw"
output_path: "output/"

cam0_calib: "color_base_mei.yaml"
image_width: 1280
image_height: 720

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2: unknown, auto-calib on-fly

body_T_cam0: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [ 
        # T_ic [kalibr 100Hz, 200Hz]:
            #  0.99989102, -0.00048548,   0.01475491,  0.0307191 ,
            #  0.00061475,  0.99996146,  -0.00875818, -0.00441253,
            # -0.01475009,  0.00876629,   0.99985278,  0.02229755,
            #  0., 0., 0., 1.]
        # T_ic [kalibr 200Hz on 200Hz calibration data]:
            #  0.99986745, -0.00044118, 0.01627528, 0.03129583,
            #  0.00058522, 0.9999607, -0.00884648, -0.00384721,
            # -0.01627074, 0.00885484, 0.99982841, 0.02117902,
            #  0., 0., 0., 1. ]
            ### 0511:
             0.9998882, -0.00193321, 0.01482754, 0.02478332,
             0.00201731, 0.99998196, -0.00565838, -0.01078818,
            -0.01481633, 0.00568766, 0.99987406, 0.0356058,
             0., 0., 0., 1. ]
            # -0.01481633,  0.00568766,  0.99987406,  0.0356058 , 
            # -0.9998882 , 0.00193321, -0.01482754, -0.02478332, 
            # -0.00201731, -0.99998196, 0.00565838,  0.01078818,  
            #  0.        ,  0.        ,  0.        ,1.        ] # re-oriented with camera_report.py
            #### based on [2023-05-11-15-47-26_base_rgb_mei-imu]
        # T_ic: Extrinsic from "Color" To "Gyro" [Manufacture]
            # 0.999992   ,    -0.00371369   ,  -0.00152836    ,  0.0289912428706884  ,
            # 0.00371287 ,     0.999993     ,  -0.000541772   ,  0.00741964485496283 ,
            # 0.00153036 ,     0.000536093  ,   0.999999      ,  0.0156792011111975  , 
            # 0, 0, 0, 1]
        # T_ic: 
            #  0.99989102, -0.00048548,  0.01475491,  0.0307191,
            #  0.00061475,  0.99996146, -0.00875818, -0.00441253,
            # -0.01475009,  0.00876629,  0.99985278,  0.02229755,
            #  0., 0., 0., 1.] # T_ic (cam0 to imu0)
        # T_ci:
            #  0.9998910225046331, 0.0006147543238273877, -0.014750091245868801, -0.030384145807179855,
            # -0.0004854798863754378, 0.9999614574487568, 0.008766294898020057, 0.004231808964715222,
            #  0.014754911857413611, -0.008758178696536346, 0.9998527826045194, -0.022786173623915343,
            #  0.0, 0.0, 0.0, 1.0]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                 # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.0558          # accelerometer measurement noise standard deviation. #0.2   0.04
acc_w: 0.0000525       # accelerometer bias random work noise standard deviation.  #0.002
gyr_n: 0.00229         # gyroscope measurement noise standard deviation.     #0.05  0.004
gyr_w: 0.00000196      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8         # gravity magnitude

#### based on [2023-05-11-15-47-26_base_rgb_mei-imu]
# Accelerometer 0511:
# Noise density: 0.003946724900130952
# Noise density (discrete): 0.055815118807207915
# Random walk: 5.247260402566035e-05
# Gyroscope:
# Noise density: 0.00016158344803440678
# Noise density (discrete): 0.002285135036652663
# Random walk: 1.954810193183154e-06

#### based on 0504
# Accelerometer:
# Noise density: 0.0010745125945568034
# Noise density (discrete): 0.015195902841629342
# Random walk: 6.632877098379687e-05
# Gyroscope:
# Noise density: 0.00016545221061917272
# Noise density (discrete): 0.002339847601822439 
# walk: 1.9621507684478566e-06

# NOTE: fine tuned on May 9 , 11 pm
#unsynchronization parameters
estimate_td: 0         # online estimate time offset between camera and imu
td: 0.00022326806147822398 # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 0                      # save image in pose graph for visualization prupose; you can close this function by setting 0 
