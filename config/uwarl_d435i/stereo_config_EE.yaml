%YAML 1.0
---
#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 0
num_of_cam: 2

imu_topic: "/cam_EE/imu"
image0_topic: "/cam_EE/infra1/image_rect_raw"
image1_topic: "/cam_EE/infra2/image_rect_raw"
output_path: "~/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 1280
image_height: 800

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2: unknown, auto-calib on-fly

body_T_cam0: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [ 1.23259516e-32, -1.11022302e-16,  1.00000000e+00,  1.17400000e-02,
                          -1.00000000e+00, -2.33486982e-16, -1.35963107e-32,  5.52000012e-03,
                           2.33486982e-16, -1.00000000e+00, -1.11022302e-16, -5.10000018e-03,
                           0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  1.00000000e+00]

body_T_cam1: !!opencv-matrix
    rows: 4
    cols: 4
    dt: d
    data: [ 1.23259516e-32, -1.11022302e-16,  1.00000000e+00,  1.17400000e-02,
                          -1.00000000e+00, -2.33486982e-16, -1.35963107e-32, -4.46839072e-02,
                           2.33486982e-16, -1.00000000e+00, -1.11022302e-16, -5.10000018e-03,
                           0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  1.00000000e+00]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.08  # max solver itration time (s), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 15 # keyframe selection threshold (pixel)

#loop closure parameters
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                      # save image in pose graph for visualization prupose; you can close this function by setting 0 
